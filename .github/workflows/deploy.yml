name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'  # ou '8.4' selon votre installation
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install NPM dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Create deployment artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *

      - name: Store artifact for distribution
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/groupifyglobal.com
            wget -O "${GITHUB_SHA}.tar.gz" "${{ secrets.ARTIFACT_URL }}"
            tar -xzf "${GITHUB_SHA}.tar.gz"

            # Backup current release
            if [ -d "current" ]; then
              mv current "backup-$(date +%Y%m%d_%H%M%S)"
            fi

            # Create new release directory
            mkdir -p releases/${GITHUB_SHA}
            mv * releases/${GITHUB_SHA}/ 2>/dev/null || true

            # Create symlink to current
            ln -sfn releases/${GITHUB_SHA} current

            # Set permissions
            chown -R deployer:www-data /var/www/groupifyglobal.com
            chmod -R 755 /var/www/groupifyglobal.com/current
            chmod -R 775 /var/www/groupifyglobal.com/current/storage
            chmod -R 775 /var/www/groupifyglobal.com/current/bootstrap/cache

            # Laravel deployment commands
            cd current
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan migrate --force
            php artisan storage:link

            # Restart services (adaptez selon votre version PHP)
            sudo systemctl reload php8.3-fpm  # ou php8.4-fpm
            sudo systemctl reload nginx

            # Clean old releases (keep last 5)
            cd /var/www/groupifyglobal.com/releases
            ls -t | tail -n +6 | xargs -d '\n' rm -rf --
        env:
          GITHUB_SHA: ${{ github.sha }}
